@model DALLayer.FrontOfficeExecutive

@{
    ViewBag.Title = "AddFrontExecutive";
    Layout = "~/Views/Shared/AdminsLayout/_AdminFrontOfficeLayout.cshtml";
}

<div class="container">
    <h2 class="text-center">Add Front Executive</h2>

    @using (Html.BeginForm("AddFrontExecutive", "Admins", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <tbody>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Name)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.DOB)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Email)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Password)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>

            <div class="col-md-6">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <tbody>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Phone)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Gender)
                                </td>
                                <td>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Gender, "Male") Male
                                    </label>&nbsp;&nbsp;
                                    <label>
                                        @Html.RadioButtonFor(m => m.Gender, "Female") Female
                                    </label>
                                    <br />
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.Address)
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <center>
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-success" />
                <a href="@Url.Action("FrontExecutiveList", "Admins")" class="btn btn-secondary ml-2">Cancel</a>
            </div>
        </center>
    }
</div>





































@*


@model DALLayer.FrontOfficeExecutive

@{
    ViewBag.Title = "AddFrontExecutive";
    Layout = "~/Views/Shared/AdminsLayout/_AdminFrontOfficeLayout.cshtml";
}

<h2>AddFrontExecutive</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>FrontOfficeExecutive</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label>
                @Html.RadioButtonFor(m => m.Gender, "Male") Male
            </label>&nbsp;&nbsp;
            <label>
                @Html.RadioButtonFor(m => m.Gender, "Female") Female
            </label>
            <br />
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}


*@